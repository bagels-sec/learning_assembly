     1                                  ;file.asm
     2                                  
     3                                  section .data
     4                                          ;Expressions used for conditional assembly
     5                                          CREATE    equ 1
     6                                          OVERWRITE equ 1
     7                                          APPEND    equ 1
     8                                          O_WRITE   equ 1
     9                                          READ      equ 1
    10                                          O_READ    equ 1
    11                                          DELETE    equ 1
    12                                  
    13                                          ;Symbol syscalls
    14                                          NR_read   equ 0
    15                                          NR_write  equ 1
    16                                          NR_open   equ 2
    17                                          NR_close  equ 3
    18                                          NR_lseek  equ 8
    19                                          NR_create equ 85
    20                                          NR_unlink equ 87
    21                                  
    22                                          ;Creation and status flags
    23                                          O_CREAT   equ 00000100q
    24                                          O_APPEND  equ 000002000q
    25                                  
    26                                          ;Access mode
    27                                          O_RDONLY  equ 000000q
    28                                          O_WRONLY  equ 000001q
    29                                          O_RDWR    equ 000002q
    30                                  
    31                                          ;Create mode (permissions)
    32                                          S_IRUSR   equ 00400q ;user read permission
    33                                          S_IWUSR   equ 00200q ;user write permission
    34                                          NL        equ 0xa    ;newline
    35                                          bufferlen equ 64     ;buffer length
    36                                  
    37 00000000 746573742E74787400              fileName  db  "test.txt",0 ;define test filename
    38                                          FD        equ 0            ;file descriptor
    39 00000009 312E2048656C6C6F2E-             text1     db  "1. Hello..to everyone",NL,0
    39 00000012 2E746F206576657279-
    39 0000001B 6F6E650A00         
    40 00000020 1600000000000000                len1      dq  $-text1-1    ; remove 0
    41 00000028 322E20486572652049-             text2     db  "2. Here I am",NL,0 ;second line
    41 00000031 20616D0A00         
    42 00000036 0D00000000000000                len2      dq  $-text2-1 ;text 2 without 0
    43 0000003E 332E20416C69766520-             text3     db  "3. Alive and kicking", NL,0 ;third line
    43 00000047 616E64206B69636B69-
    43 00000050 6E670A00           
    44 00000054 1500000000000000                len3      dq  $-text3-1 ;text3 without 0
    45 0000005C 4164696F730A00                  text4     db  "Adios",NL,0 ;line4
    46 00000063 0600000000000000                len4      dq  $-text4-1 ;line4 minus the 0
    47                                  
    48 0000006B 4572726F7220637265-             error_Create db "Error creating file",NL,0
    48 00000074 6174696E672066696C-
    48 0000007D 650A00             
    49 00000080 4572726F7220636C6F-             error_Close  db "Error closing file",NL,0
    49 00000089 73696E672066696C65-
    49 00000092 0A00               
    50 00000094 4572726F7220577269-             error_Write  db "Error Writing file",NL,0
    50 0000009D 74696E672066696C65-
    50 000000A6 0A00               
    51 000000A8 4572726F72204F7065-             error_Open   db "Error Opening file",NL,0
    51 000000B1 6E696E672066696C65-
    51 000000BA 0A00               
    52 000000BC 4572726F7220417070-             error_Append db "Error Appending file",NL,0
    52 000000C5 656E64696E67206669-
    52 000000CE 6C650A00           
    53 000000D2 4572726F722044656C-             error_Delete db "Error Deleting file",NL,0
    53 000000DB 6574696E672066696C-
    53 000000E4 650A00             
    54 000000E7 4572726F7220526561-             error_Read   db "Error Reading file",NL,0
    54 000000F0 64696E672066696C65-
    54 000000F9 0A00               
    55 000000FB 4572726F7220507269-             error_Print  db "Error Printing string",NL,0
    55 00000104 6E74696E6720737472-
    55 0000010D 696E670A00         
    56 00000112 4572726F7220506F73-             error_Pos    db "Error Positioning in file",NL,0
    56 0000011B 6974696F6E696E6720-
    56 00000124 696E2066696C650A00 
    57                                  
    58 0000012D 46696C652063726561-             success_Create db "File created and opened",NL,0
    58 00000136 74656420616E64206F-
    58 0000013F 70656E65640A00     
    59 00000146 46696C6520636C6F73-             success_Close  db "File closed",NL,0
    59 0000014F 65640A00           
    60 00000153 5772697474656E2074-             success_Write  db "Written to file",NL,0
    60 0000015C 6F2066696C650A00   
    61 00000164 46696C65204F70656E-             success_Open   db "File Opened",NL,0
    61 0000016D 65640A00           
    62 00000171 46696C65206F70656E-             success_Append db "File openened for appending",NL,0
    62 0000017A 656E656420666F7220-
    62 00000183 617070656E64696E67-
    62 0000018C 0A00               
    63 0000018E 46696C652064656C65-             success_Delete db "File deleted",NL,0
    63 00000197 7465640A00         
    64 0000019C 46696C652072656164-             success_Read   db "File read",NL,0
    64 000001A5 0A00               
    65 000001A7 46696C6520706F7369-             success_Pos    db "File position successful",NL,0
    65 000001B0 74696F6E2073756363-
    65 000001B9 65737366756C0A00   
    66                                  
    67                                  section .bss
    68 00000000 <res 00000040>                  buffer resb bufferlen
    69                                  section .text
    70                                          global main
    71                                  main:
    72                                  
    73 00000000 55                              push rbp
    74 00000001 4889E5                          mov rbp,rsp ;Prologue
    75                                  
    76                                          %IF CREATE
    77                                          ;Macro, create and open a file,then close
    78                                          ;create and open file
    79                                  
    80 00000004 48BF-                           mov rdi,fileName
    80 00000006 [0000000000000000] 
    81 0000000E E818030000                      call createFile ;call createfile function
    82 00000013 4889042500000000                mov qword[FD], rax ;save the file descriptor
    83                                  
    84                                          ;Write to file #1
    85 0000001B 488B3C2500000000                mov rdi, qword[FD]   ;copy file descriptor to rdi
    86 00000023 48BE-                           mov rsi, text1        ;copy text1 to rsi register 
    86 00000025 [0900000000000000] 
    87 0000002D 488B1425[20000000]              mov rdx, qword[len1] ;copy lenght of text1 to rdx
    88 00000035 E874020000                      call writeFile
    89                                  
    90                                          ;close file 
    91 0000003A 488B3C2500000000                mov rdi, qword[FD]   ;copy file descriptor to rdi
    92 00000042 E8B7020000                      call closeFile
    93                                          %ENDIF
    94                                  
    95                                          %IF OVERWRITE
    96                                          ;Open and overwrite a file, then close
    97                                          ;open file
    98 00000047 48BF-                           mov rdi, fileName     ;copy filename to rdi
    98 00000049 [0000000000000000] 
    99 00000051 E824020000                      call openFile         ;call openfile function
   100 00000056 4889042500000000                mov qword[FD], rax   ;save file descriptor
   101                                  
   102                                          ;write to file #2 overwrite
   103 0000005E 488B3C2500000000                mov rdi, qword[FD]    ;copy file descriptor to rdi
   104 00000066 48BE-                           mov rsi, text2        ;copy text2 to rsi
   104 00000068 [2800000000000000] 
   105 00000070 488B1425[36000000]              mov rdx, qword[len2] ;copy text2 len to rdx
   106 00000078 E831020000              	        call writeFile        ;call write file function
   107                                  
   108                                          ;close file
   109 0000007D 488B3C2500000000                mov rdi, qword[FD]   ;copy file descriptor to rdi
   110 00000085 E874020000                      call closeFile        ;call closefile function
   111                                          %ENDIF
   112                                  
   113                                          %IF APPEND
   114                                          ;open and append to a file, then close
   115                                          ;open file to append
   116 0000008A 48BF-                           mov rdi, fileName     ;copy filename to rdi
   116 0000008C [0000000000000000] 
   117 00000094 E8AD010000              	call appendFile       ;call appendfile function
   118 00000099 4889042500000000        	mov qword[FD], rax   ;save file descriptor
   119                                  	
   120                                  	;write to file #3 append
   121 000000A1 488B3C2500000000        	mov rdi, qword[FD]
   122 000000A9 48BE-                   	mov rsi, text3 
   122 000000AB [3E00000000000000] 
   123 000000B3 488B1425[54000000]      	mov rdx, qword[len3]
   124 000000BB E8EE010000              	call writeFile
   125                                  
   126                                  	;close file
   127 000000C0 488B3C2500000000        	mov rdi, qword[FD]
   128 000000C8 E831020000              	call closeFile
   129                                  	%ENDIF
   130                                  
   131                                  	%IF O_WRITE
   132                                  	;Open and overwrite at an offset
   133 000000CD 48BF-                   	mov rdi, fileName
   133 000000CF [0000000000000000] 
   134 000000D7 E89E010000              	call openFile
   135 000000DC 4889042500000000        	mov qword[FD], rax
   136                                  	
   137                                  	;position file at offset
   138 000000E4 488B3C2500000000        	mov rdi, qword[FD]
   139 000000EC 488B3425[36000000]      	mov rsi, qword[len2] ;offset at this location
   140 000000F4 BA00000000              	mov rdx, 0
   141 000000F9 E8DD010000              	call positionFile
   142                                  
   143                                  	;write to file at offset
   144 000000FE 488B3C2500000000        	mov rdi, qword[FD]
   145 00000106 48BE-                   	mov rsi, text4
   145 00000108 [5C00000000000000] 
   146 00000110 488B1425[63000000]      	mov rdx, qword[len4]
   147 00000118 E891010000              	call writeFile
   148                                  
   149                                  	;close file
   150 0000011D 488B3C2500000000        	mov rdi, qword[FD]
   151 00000125 E8D4010000              	call closeFile
   152                                  	%ENDIF
   153                                  
   154                                  	%IF READ
   155                                  	;open and read from a file, then close
   156                                  	;open the file to read
   157 0000012A 48BF-                   	mov rdi, fileName
   157 0000012C [0000000000000000] 
   158 00000134 E841010000              	call openFile
   159 00000139 4889042500000000        	mov qword[FD], rax
   160                                  
   161                                  	;read from file
   162 00000141 488B3C2500000000        	mov rdi, qword[FD]
   163 00000149 48BE-                   	mov rsi, buffer
   163 0000014B [0000000000000000] 
   164 00000153 BA40000000              	mov rdx, bufferlen
   165 00000158 E886000000              	call readFile
   166 0000015D 4889C7                  	mov rdi, rax
   167 00000160 E8FA010000              	call printString
   168                                  
   169                                  	;close file
   170 00000165 488B3C2500000000        	mov rdi, qword[FD]
   171 0000016D E88C010000              	call closeFile
   172                                  	%ENDIF
   173                                  
   174                                  	%IF O_READ
   175                                  	;open and read at an offset from a file, then close
   176 00000172 48BF-                   	mov rdi, fileName
   176 00000174 [0000000000000000] 
   177 0000017C E8F9000000              	call openFile
   178 00000181 4889042500000000        	mov qword[FD], rax
   179                                  
   180                                  	;position file at offset
   181 00000189 488B3C2500000000        	mov rdi, qword[FD]
   182 00000191 488B3425[36000000]      	mov rsi, qword[len2]
   183 00000199 BA00000000              	mov rdx, 0
   184 0000019E E838010000              	call positionFile
   185                                  
   186                                  	;read from file
   187 000001A3 488B3C2500000000        	mov rdi, qword[FD]
   188 000001AB 48BE-                   	mov rsi, buffer
   188 000001AD [0000000000000000] 
   189 000001B5 BA0A000000              	mov rdx, 10 ;number of chars to read
   190 000001BA E824000000              	call readFile
   191 000001BF 4889C7                  	mov rdi, rax
   192 000001C2 E898010000              	call printString
   193                                  
   194                                  	;close file
   195 000001C7 488B3C2500000000        	mov rdi, qword[FD]
   196 000001CF E82A010000              	call closeFile
   197                                  	%ENDIF
   198                                  
   199                                  	%IF DELETE
   200 000001D4 48BF-                   	mov rdi, fileName
   200 000001D6 [0000000000000000] 
   201 000001DE E836000000              	call deleteFile
   202                                  	%ENDIF
   203                                  
   204                                  global readFile
   205                                  readFile:
   206 000001E3 B800000000              	mov rax, NR_read
   207 000001E8 0F05                    	syscall ;rax has # of chars read
   208 000001EA 4883F800                	cmp rax, 0
   209 000001EE 7C19                    	jl readerror
   210 000001F0 C6040600                	mov byte[rsi+rax],0 ;add a terminating zero
   211 000001F4 4889F0                  	mov rax,rsi
   212                                  	
   213 000001F7 48BF-                   	mov rdi, success_Read
   213 000001F9 [9C01000000000000] 
   214 00000201 50                      	push rax ;caller saved
   215 00000202 E858010000              	call printString
   216 00000207 58                      	pop rax
   217 00000208 C3                      	ret
   218                                  
   219                                  readerror:
   220 00000209 48BF-                   	mov rdi, error_Read
   220 0000020B [E700000000000000] 
   221 00000213 E847010000              	call printString
   222 00000218 C3                      	ret
   223                                  
   224                                  global deleteFile
   225                                  deleteFile:
   226 00000219 B857000000              	mov rax, NR_unlink
   227 0000021E 0F05                    	syscall
   228 00000220 4883F800                	cmp rax, 0
   229 00000224 7C10                    	jl deleteerror
   230 00000226 48BF-                   	mov rdi, success_Delete
   230 00000228 [8E01000000000000] 
   231 00000230 E82A010000              	call printString
   232 00000235 C3                      	ret
   233                                  deleteerror:
   234 00000236 48BF-                   	mov rdi, error_Delete
   234 00000238 [D200000000000000] 
   235 00000240 E81A010000              	call printString
   236 00000245 C3                      	ret
   237                                  
   238                                  global appendFile
   239                                  appendFile:
   240 00000246 B802000000              	mov rax, NR_open
   241 0000024B BE02040000              	mov rsi, O_RDWR|O_APPEND
   242 00000250 0F05                    	syscall
   243 00000252 4883F800                	cmp rax, 0
   244 00000256 7C12                    	jl appenderror
   245 00000258 48BF-                   	mov rdi, success_Append
   245 0000025A [7101000000000000] 
   246 00000262 50                      	push rax
   247 00000263 E8F7000000              	call printString
   248 00000268 58                      	pop rax
   249 00000269 C3                      	ret
   250                                  
   251                                  appenderror:
   252 0000026A 48BF-                   	mov rdi, error_Append
   252 0000026C [BC00000000000000] 
   253 00000274 E8E6000000              	call printString
   254 00000279 C3                      	ret
   255                                  
   256                                  global openFile
   257                                  openFile:
   258 0000027A B802000000              	mov rax, NR_open
   259 0000027F BE02000000              	mov rsi, O_RDWR
   260 00000284 0F05                    	syscall
   261 00000286 4883F800                	cmp rax, 0
   262 0000028A 7C12                    	jl openerror
   263 0000028C 48BF-                   	mov rdi, success_Open
   263 0000028E [6401000000000000] 
   264 00000296 50                      	push rax
   265 00000297 E8C3000000              	call printString
   266 0000029C 58                      	pop rax
   267 0000029D C3                      	ret
   268                                  
   269                                  openerror:
   270 0000029E 48BF-                   	mov rdi, error_Open
   270 000002A0 [A800000000000000] 
   271 000002A8 E8B2000000              	call printString
   272 000002AD C3                      	ret
   273                                  
   274                                  global writeFile
   275                                  writeFile:
   276 000002AE B801000000              	mov rax, NR_write
   277 000002B3 0F05                    	syscall
   278 000002B5 4883F800                	cmp rax, 0
   279 000002B9 7C10                    	jl writeerror
   280 000002BB 48BF-                   	mov rdi, success_Write
   280 000002BD [5301000000000000] 
   281 000002C5 E895000000              	call printString
   282 000002CA C3                      	ret
   283                                  writeerror:
   284 000002CB 48BF-                   	mov rdi, error_Write
   284 000002CD [9400000000000000] 
   285 000002D5 E885000000              	call printString
   286 000002DA C3                      	ret
   287                                  
   288                                  global positionFile
   289                                  positionFile:
   290 000002DB B808000000              	mov rax, NR_lseek
   291 000002E0 0F05                    	syscall
   292 000002E2 4883F800                	cmp rax,0
   293 000002E6 7C0B                    	jl positionerror
   294                                  	mov rdi, success_Position
   294          ******************       error: symbol `success_Position' undefined
   295 000002E8 E872000000              	call printString
   296 000002ED C3                      	ret
   297                                  positionerror:
   297          ******************       error: label `positionerror' changed during code generation [-w+error=label-redef-late]
   298                                  	mov rdi, error_Position
   298          ******************       error: symbol `error_Position' undefined
   299 000002EE E86C000000              	call printString
   300 000002F3 C3                      	ret
   301                                  
   302                                  global closeFile
   303                                  closeFile:
   303          ******************       error: label `closeFile' changed during code generation [-w+error=label-redef-late]
   304 000002F4 B803000000              	mov rax, NR_close
   305 000002F9 0F05                    	syscall
   306 000002FB 4883F800                	cmp rax,0
   307 000002FF 7C1A                    	jl closeerror
   308 00000301 48BF-                   	mov rdi, success_Close
   308 00000303 [4601000000000000] 
   309 0000030B E84F000000              	call printString
   310 00000310 C3                      	ret
   311                                  closeerror:
   311          ******************       error: label `closeerror' changed during code generation [-w+error=label-redef-late]
   312 00000311 48BF-                   	mov rdi, error_Close
   312 00000313 [8000000000000000] 
   313 0000031B E83F000000              	call printString
   314 00000320 C3                      	ret
   315                                  
   316                                  global createFile
   317                                  createFile:
   317          ******************       error: label `createFile' changed during code generation [-w+error=label-redef-late]
   318 00000321 B855000000              	mov rax, NR_create
   319 00000326 BE80010000              	mov rsi, S_IRUSR |S_IWUSR
   320 0000032B 0F05                    	syscall
   321 0000032D 4883F800                	cmp rax, 0
   322 00000331 7C1C                    	jl createerror
   323 00000333 48BF-                   	mov rdi, success_Create
   323 00000335 [2D01000000000000] 
   324 0000033D 50                      	push rax
   325 0000033E E81C000000              	call printString
   326 00000343 58                      	pop rax
   327 00000344 C3                      	ret
   328                                  createerror:
   328          ******************       error: label `createerror' changed during code generation [-w+error=label-redef-late]
   329 00000345 48BF-                   	mov rdi, error_Create
   329 00000347 [6B00000000000000] 
   330 0000034F E80B000000              	call printString
   331 00000354 C3                      	ret
   332                                  
   333                                  global printString
   334                                  printString:
   334          ******************       error: label `printString' changed during code generation [-w+error=label-redef-late]
   335 00000355 4989FC                  	mov r12, rdi
   336 00000358 BA00000000              	mov rdx, 0
   337                                  strLoop:
   337          ******************       error: label `strLoop' changed during code generation [-w+error=label-redef-late]
   338 0000035D 41803C2400              	cmp byte[r12],0
   339 00000362 7412                    	je strDone
   340 00000364 48FFC2                  	inc rdx
   341 00000367 49FFC4                  	inc r12
   342 0000036A EBF1                    	jmp strLoop
   343                                  strDone:
   343          ******************       error: label `strDone' changed during code generation [-w+error=label-redef-late]
   344 0000036C 4883FA00                	cmp rdx,0
   345 00000370 7419                    	je prtDone
   346 00000372 4889FE                  	mov rsi,rdi
   347 00000375 B801000000              	mov rax, 1
   348 0000037A BF01000000              	mov rdi, 1
   349 0000037F 0F05                    	syscall
   350                                  prtDone:
   350          ******************       error: label `prtDone' changed during code generation [-w+error=label-redef-late]
   351 00000381 C3                      	ret
