     1                                  ;alive.asm
     2                                  extern printf
     3                                  section .data
     4 00000000 48656C6C6F2C20576F-     	msg1    db  "Hello, World",10,0 ; Defining our string with newline at the end
     4 00000009 726C640A00         
     5                                  	msg1Len equ $-msg1-1 		; Measure the length of msg1 minus the 0
     6 0000000E 416C69766520616E64-     	msg2	db  "Alive and Kicking",10,0 ;Define second message with newline at the end
     6 00000017 204B69636B696E670A-
     6 00000020 00                 
     7                                  	msg2Len equ $-msg2-1		; Get lenght of msg2 minus 0 at the end
     8 00000021 6501000000000000        	radius  dq  357
     9 00000029 1F85EB51B81E0940        	pi	dq  3.14
    10 00000031 256C660A00              	fmtflt	db  "%lf",10,0
    11 00000036 25730A00                	fmtstr  db "%s",10,0
    12 0000003A 25640A00                	fmtint  db "%d",10,0
    13                                  section .bss
    14                                  section .text
    15                                  	global main
    16                                  	main:
    17 00000000 55                      		push rbp
    18 00000001 4889E5                  		mov rbp,rsp
    19 00000004 B800000000              		mov rax,0
    20 00000009 48BF-                   		mov rdi, fmtstr
    20 0000000B [3600000000000000] 
    21 00000013 48BE-                   		mov rsi, msg1
    21 00000015 [0000000000000000] 
    22 0000001D E8(00000000)            		call printf
    23 00000022 B800000000              		mov rax,0
    24 00000027 48BF-                   		mov rdi, fmtstr
    24 00000029 [3600000000000000] 
    25 00000031 48BE-                   		mov rsi, msg2
    25 00000033 [0E00000000000000] 
    26 0000003B E8(00000000)            		call printf
    27 00000040 B800000000              		mov rax,0
    28 00000045 48BF-                   		mov rdi, fmtint
    28 00000047 [3A00000000000000] 
    29 0000004F 488B3425[21000000]      		mov rsi, [radius]
    30 00000057 E8(00000000)            		call printf
    31 0000005C B801000000              		mov rax, 1
    32 00000061 F30F7E0425-             		movq xmm0, [pi]
    32 00000066 [29000000]         
    33 0000006A 48BF-                   		mov rdi, fmtflt
    33 0000006C [3100000000000000] 
    34 00000074 E8(00000000)            		call printf
    35 00000079 4889EC                  		mov rsp, rbp
    36 0000007C 5D                      		pop rbp
    37 0000007D C3                      		ret
