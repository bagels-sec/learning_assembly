     1                                  ;console.asm
     2                                  
     3                                  section .data
     4 00000000 48656C6C6F2C20576F-     	msg1 db "Hello, World",10,0
     4 00000009 726C640A00         
     5                                  	msg1Len equ $-msg1
     6 0000000E 596F7572205475726E-     	msg2 db "Your Turn",10,0
     6 00000017 0A00               
     7                                  	msg2Len equ $-msg2
     8 00000019 596F7520416E737765-     	msg3 db "You Answered",10,0
     8 00000022 7265640A00         
     9                                  	msg3Len equ $-msg3
    10                                  
    11                                  	inputlen equ 10 ;Length of input buffer
    12                                  
    13                                  section .bss
    14 00000000 <res 0000000B>          	input resb inputlen+1 ;provide space for ending 0
    15                                  section .text
    16                                  	global main
    17                                  main:
    18 00000000 55                      	push rbp
    19 00000001 4889E5                  	mov rbp, rsp
    20                                  
    21 00000004 48BE-                   	mov rsi, msg1 ;print the first string
    21 00000006 [0000000000000000] 
    22 0000000E BA0E000000              	mov rdx, msg1Len
    23 00000013 E848000000              	call prints
    24                                  
    25 00000018 48BE-                   	mov rsi, msg2
    25 0000001A [0E00000000000000] 
    26 00000022 BA0B000000              	mov rdx, msg2Len
    27 00000027 E834000000              	call prints
    28                                  
    29 0000002C 48BE-                   	mov rsi, input ;address of input buffer
    29 0000002E [0000000000000000] 
    30 00000036 BA0A000000              	mov rdx, inputlen ;length of inputbuffer
    31 0000003B E832000000              	call reads ;wait for input
    32                                  
    33 00000040 48BE-                   	mov rsi, msg3 ;print msg3
    33 00000042 [1900000000000000] 
    34 0000004A BA0E000000              	mov rdx, msg3Len
    35 0000004F E80C000000              	call prints
    36                                  
    37 00000054 BA0A000000              	mov rdx, inputlen ;length of input buffer
    38 00000059 E802000000              	call prints
    39                                  
    40 0000005E C9                      	leave
    41 0000005F C3                      	ret
    42                                  
    43                                  prints:
    44 00000060 55                      	push rbp
    45 00000061 4889E5                  	mov rbp,rsp
    46                                  
    47                                  	; rdi contains address of string
    48                                  	; rdx contains length of string
    49                                  
    50 00000064 B801000000              	mov rax, 1 ; 1 = write
    51 00000069 BF01000000              	mov rdi, 1 ; 1 = stdout
    52 0000006E 0F05                    	syscall
    53 00000070 C9                      	leave
    54 00000071 C3                      	ret
    55                                  
    56                                  reads:
    57 00000072 55                      	push rbp
    58 00000073 4889E5                  	mov rbp,rsp
    59                                  	
    60                                  	; rsi contains address of input buffer
    61                                  	; rdi contains length of input buffer
    62                                  
    63 00000076 B800000000              	mov rax, 0 ; 0 = read
    64 0000007B BF01000000              	mov rdi, 1 ; 1 = stdin
    65                                  
    66 00000080 0F05                    	syscall
    67 00000082 C9                      	leave
    68 00000083 C3                      	ret
    69                                  		
